<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankPaymAdviceReportGeneratorVendPromissoryNoteReDrawExt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Generates the report data for the <c>BankPaymAdviceVend</c> report for promissory note redraws.
/// </summary>
public class BankPaymAdviceReportGeneratorVendPromissoryNoteReDrawExt extends BankPaymAdviceReportGeneratorVendExt
{
    private VendTrans vendTransOriginalInvoice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findInvoicesAndCreateData</Name>
				<Source><![CDATA[
    protected void findInvoicesAndCreateData()
    {
        VendSettlement vendSettlement;
        VendPromissoryNoteInvoice vendPromissoryNoteInvoice;

        // This section is run when generating payments from a redraw
        // The promissory note has already been settled which is why the noter invoice exists.
        // All the data in this select is from the same company and is based on the payment.
        while select specTrans
            where specTrans.SpecTableId == tableNum(LedgerJournalTrans)
                && specTrans.SpecRecId == ledgerJournalTrans.RecId
                && specTrans.SpecCompany == ledgerJournalTrans.company()
            join TransRecId, RecId from vendSettlement
                where vendSettlement.RecId == specTrans.RefRecId
            join vendTransInvoice
                where vendTransInvoice.RecId == vendSettlement.TransRecId
            join PromissoryNoteId, InvoiceCompany, InvoiceVoucher, InvoiceDate, InvoiceId from vendPromissoryNoteInvoice
                where vendPromissoryNoteInvoice.PromissoryNoteId == vendTransInvoice.PromissoryNoteID
        {
            // Here we get the trans settled which may be in a different company and the
            // promissory note invoice has the company to look in captured.
            changecompany(vendPromissoryNoteInvoice.InvoiceCompany)
            {
                select firstonly vendTransOriginalInvoice
                    where vendTransOriginalInvoice.Voucher == vendPromissoryNoteInvoice.InvoiceVoucher
                        && vendTransOriginalInvoice.TransDate == vendPromissoryNoteInvoice.InvoiceDate
                        && vendTransOriginalInvoice.Invoice == vendPromissoryNoteInvoice.InvoiceId;
            }

            this.insertBankPaymAdviceTmp();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBankPaymAdviceTempPaymentInfo</Name>
				<Source><![CDATA[
    protected void populateBankPaymAdviceTempPaymentInfo()
    {
        bankPaymAdviceTmp.PaymRefLabel = this.getPaymRefLabel();
        bankPaymAdviceTmp.PaymentReference = this.getPaymRef();
        bankPaymAdviceTmp.SettledCurrencyCode = this.getPaymentCurrencyCode();
        bankPaymAdviceTmp.CashDisc = 0;         //we only give the discount once
        bankPaymAdviceTmp.Balance01 = this.calculateAmountInPaymentCurrency(ledgerJournalTrans.TransDate, vendTransOriginalInvoice.CurrencyCode, -this.paymentAmountCur());
        bankPaymAdviceTmp.TransDate = ledgerJournalTrans.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBankPaymAdviceTempInvoiceInfo</Name>
				<Source><![CDATA[
    protected void populateBankPaymAdviceTempInvoiceInfo()
    {
        bankPaymAdviceTmp.Invoice = vendTransOriginalInvoice.Invoice;
        bankPaymAdviceTmp.InvoiceDate = vendTransOriginalInvoice.DocumentDate ? vendTransOriginalInvoice.DocumentDate : vendTransOriginalInvoice.TransDate;
        bankPaymAdviceTmp.CurrencyCode = vendTransOriginalInvoice.CurrencyCode;
        bankPaymAdviceTmp.AmountCur = -vendTransOriginalInvoice.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentAmountCur</Name>
				<Source><![CDATA[
    private AmountCur paymentAmountCur()
    {
        CustVendTransDetails vendTransDetails = new CustVendTransDetails(vendTransOriginalInvoice);

        vendTransDetails.setCustVendTrans(vendTransOriginalInvoice);

        return vendTransOriginalInvoice.AmountCur - vendTransDetails.utilizedCashDisc();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>